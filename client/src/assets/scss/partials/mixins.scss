@use './variables' as vars;

@mixin xs {
    @media (min-width: vars.$xs) {
        @content;
    }
}

@mixin sm {
    @media (min-width: vars.$sm) {
        @content;
    }
}

@mixin md {
    @media (min-width: vars.$md) {
        @content;
    }
}

@mixin lg {
    @media (min-width: vars.$lg) {
        @content;
    }
}

@mixin xl {
    @media (min-width: vars.$xl) {
        @content;
    }
}

@mixin xxl {
    @media (min-width: vars.$xxl) {
        @content;
    }
}

@mixin rwd($size) {
    @media (min-width: $size) {
        @content;
    }
}

@mixin flex($align: stretch, $justify: flex-start, $ff: row nowrap, $gap: 0) {
    display: flex;
    align-items: $align;
    justify-content: $justify;
    flex-flow: $ff;
    gap: $gap;
}

@mixin inline-flex($align: stretch, $justify: flex-start, $ff: row nowrap, $gap: 0) {
    display: inline-flex;
    align-items: $align;
    justify-content: $justify;
    flex-flow: $ff;
    gap: $gap;
}

@mixin grid($align: stretch, $justify: flex-start, $gap: auto, $gtc: auto) {
    display: grid;
    align-items: $align;
    justify-content: $justify;
    gap: $gap;
    grid-template-columns: $gtc;
}

@mixin input-container-styles {
    border: 1px solid var(--border-color);
    background-color: var(--background-color);
    color: var(--text-color);
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    font-size: 1rem;
    max-width: 900px;
    width: 100%;
    transition: all 250ms ease-in-out;

    svg {
        fill: var(--text-color);
        width: 1.5rem;
        height: 1.5rem;
        transition: all 250ms ease-in-out;
    }

    input {
        background-color: transparent;
        color: inherit;
        border: none;
        width: 100%;
        font-size: revert;
        padding: 0;
        margin: 0;

        &::placeholder {
            color: var(--text-color);
        }
    }
}
